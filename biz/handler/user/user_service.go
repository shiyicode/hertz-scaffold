// Code generated by hertz generator.

package user

import (
	"context"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/errors"
	"github.com/three-body/hertz-scaffold/biz/hmodel/user"
	"github.com/three-body/hertz-scaffold/biz/logic"
	"github.com/three-body/hertz-scaffold/biz/middleware"
)

// Signup .
//
//	@Summary	signup
//	@Description
//	@Tags		user
//	@Accept		mpfd
//	@Produce	json
//	@Param		email		formData	string	true	"email"
//	@Param		password	formData	string	true	"password"
//	@Param		nickname	formData	string	true	"nickname"
//	@Success	200			{object}	user.User
//	@router		/users/signup [POST]
func Signup(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.SignupRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(http.StatusBadRequest, err)
		return
	}
	if err = req.IsValid(); err != nil {
		c.JSON(http.StatusBadRequest, err)
		return
	}

	resp, err := logic.NewUserLogic(ctx, c).Signup(&req)
	if err != nil {
		c.JSON(http.StatusInternalServerError, err.(*errors.Error).JSON())
	} else {
		c.JSON(http.StatusOK, resp)
	}
}

// Login .
//
//	@Summary	login
//	@Description
//	@Tags		user
//	@Accept		mpfd
//	@Produce	json
//	@Param		email		formData	string	true	"email"
//	@Param		password	formData	string	true	"password"
//	@Success	200			{object}	user.LoginResponse
//	@Router		/users/login [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	middleware.JwtMiddleware.LoginHandler(ctx, c)
}

// Logout .
//
//	@Summary	logout
//	@Description
//	@Tags		user
//	@Accept		json
//	@Produce	json
//	@Success	200	{object}	user.LogoutResponse
//	@router		/users/logout [POST]
func Logout(ctx context.Context, c *app.RequestContext) {
	middleware.JwtMiddleware.LogoutHandler(ctx, c)
}
